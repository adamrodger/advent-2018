#ip 4           A = part1 ? 0 : 1; 0 = A, 1 = B, 2 = C, 3 = D, 4 = i, 5 = E
 0: addi 4 16 4     i += 16                 goto 17                     # work out the target number
 1: seti 1 3 5      E = 1                   while true: # outer loop
 2: seti 1 1 3      D = 1                       while true: # inner loop
 3: mulr 5 3 1      B = D * E                       B = D * E
 4: eqrr 1 2 1      B = B == C ? 1 : 0
 5: addr 1 4 4      i += B                      
 6: addi 4 1 4      i += 1                          if B == C:          # found a factor, add to the total
 7: addr 5 0 0      A += E                              A += E
 8: addi 3 1 3      D += 1                          D++
 9: gtrr 3 2 1      B = D > C ? 1 : 0               if D > C:           # when we've counted to the target, stop
10: addr 4 1 4      i += B                              break           # break inner loop
11: seti 2 8 4      i = 2                       end loop
12: addi 5 1 5      E += 1                      E++
13: gtrr 5 2 1      B = E > C ? 1 : 0           if E > C:               # when we've done every possible D * E, stop
14: addr 1 4 4      i += B                          break               # break outer loop
15: seti 1 3 4      i = 1                   end loop
16: mulr 4 4 4      i = i * i               exit                        # fall off the end
17: addi 2 2 2      C += 2                  C += 2
18: mulr 2 2 2      C = C * C               
19: mulr 4 2 2      C = i * C               C = C * 19 * 11             # i == 19 on this instruction
20: muli 2 11 2     C *= 11                 
21: addi 1 6 1      B += 6                  B += 6
22: mulr 1 4 1      B *= i                  B = ((B + 6) * 22) + 18     # i == 22 on this instruction
23: addi 1 18 1     B += 18
24: addr 2 1 2      C += B                  C += B
25: addr 4 0 4      i += A                  if A == 0                   # part 1
26: seti 0 3 4      i = 0                       goto start              # GOTO start and factorise, else make the number much bigger
27: setr 4 5 1      B = i                   
28: mulr 1 4 1      B *= 4                  
29: addr 4 1 1      B += i                  
30: mulr 4 1 1      B *= i
31: muli 1 14 1     B *= 14
32: mulr 1 4 1      B *= i					B = ((27 * 4) + 29) * 30 * 14 * 32  # i == 27 above, then 29, then 30, then 32 here
33: addr 2 1 2      C += B                  C += B
34: seti 0 1 0      A = 0                   A = 0
35: seti 0 4 4      i = 0                   goto start

This roughly translates to something like...

bool part1 = false;

int total = 0;
int x = 0;
int y = 0;

// calculate target
int target = (2 * 19 * 11) + (((6 + 6) * 22) + 18) // 418 + 282 = 700

if (!part1)
{
    // make it even bigger for part 2
    target += ((27 * 4) + 29) * 30 * 14 * 32
}

for (int i = 1; i <= target; i++)
{
    for (int j = 1; j <= target; j++)
    {
        int product = i * j;
    
        if (product == total)
        {
            // found a factor, add to total
			total += i;
            break;
        }
    }
}

Console.WriteLine(total);